AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: Social Media Analytics Enrichment Lambda Functions

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment name

  OpenAISecretName:
    Type: String
    Default: ptdata/openai
    Description: Name of the secret containing OpenAI credentials

  LogRetentionDays:
    Type: Number
    Default: "14"
    Description: CloudWatch Logs retention period in days

Globals:
  Function:
    Timeout: 900 # 15 minutes
    MemorySize: 1024
    Runtime: python3.11
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment
        OPENAI_SECRET_NAME: !Ref OpenAISecretName
        PYTHONPATH: /var/task:/var/task/src
    Tags:
      Environment: !Ref Environment
      Service: social-media-enrichment

Resources:
  # API Gateway HTTP API with IAM auth
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Auth:
        DefaultAuthorizer: IAMAuthorizer
        Authorizers:
          IAMAuthorizer:
            EnableIamAuthorizer: true

  UserNeedsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: handler.lambda_handler
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: rate(30 minutes)
            Input:
              Fn::Sub: |
                {
                  "path": "/user_needs",
                  "queryStringParameters": {
                    "max_records": "10000"
                  }
                }
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${OpenAISecretName}-*"
            - Effect: Allow
              Action:
                - glue:*
                - s3:*
              Resource: "*"

  ModelInferenceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: handler.lambda_handler
      Events:
        HttpApi:
          Type: HttpApi
          Properties:
            Path: /{model}
            Method: GET
            ApiId: !Ref HttpApi
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${OpenAISecretName}-*"
            - Effect: Allow
              Action:
                - glue:*
                - s3:*
              Resource: "*"

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com"
