AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: Social Media Analytics Enrichment Lambda Function

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment name

  OpenAISecretName:
    Type: String
    Default: ptdata/openai
    Description: Name of the secret containing OpenAI credentials

Globals:
  Function:
    Timeout: 60
    MemorySize: 2048
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment
        OPENAI_SECRET_NAME: !Ref OpenAISecretName
        PYTHONPATH: /var/task:/var/task/src
        AWS_LAMBDA_LOG_FLUSH: "true"

Resources:
  UserNeedsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-user-needs"
      PackageType: Image
      ImageUri: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AWS::StackName}:latest"
      AutoPublishAlias: live
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${OpenAISecretName}-*"
            - Effect: Allow
              Action:
                - glue:*
                - s3:*
              Resource: "*"
      Events:
        ScheduleTrigger:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: rate(30 minutes)
            RetryPolicy:
              MaximumRetryAttempts: 0
              MaximumEventAgeInSeconds: 900 # 15 minutes
            Input: '{"path": "/user_needs", "queryStringParameters": {"max_records": "1000"}}'
