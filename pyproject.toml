[tool.poetry]
name = "ptdata_social_media_enrichment"
version = "0.1.0"
description = "PTData Social Media Enrichment Lambdas"
authors = ["Jakob Melchard <jakob.melchard@orf.at>"] 
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = "~3.12"
openai = "1.54.4"
boto3 = ">=1.35.16,<1.35.37"
aioboto3 = "13.2.0"
omegaconf = "2.3.0"
tenacity = "^8.2.0"
jinja2 = "^3.1.2"
pydantic = "^2.0.2"

[tool.poetry.group.dev.dependencies]
ruff = ">=0.1.9"
mypy = ">=1.8.0"
pip-tools = ">=7.3.0"
aws-sam-cli = ">=1.110.0"
pytest-asyncio = ">=0.23.5"
pytest-cov = ">=4.1.0"
pytest-mock = ">=3.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

line-length = 100
indent-width = 4
target-version = "py312"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "YTT", # flake8-2020
    "S",   # flake8-bandit
]
ignore = ["E501"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
check_untyped_defs = true

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
